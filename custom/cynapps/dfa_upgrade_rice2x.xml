<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

     <changeSet author="cah292" id="KFSUPGRADE-876" failOnError="false">
        <comment>dfa info access upgrade</comment>
        <sql stripComments="true" endDelimiter="/">
            <![CDATA[
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_constraints where CONSTRAINT_NAME = 'DFA_PROC_SYS_T_FK';
IF c>0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE DFA_REQ_T DROP CONSTRAINT DFA_PROC_SYS_T_FK';
END IF;
END;
/
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_constraints where CONSTRAINT_NAME = 'DFA_REQ_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE DFA_REQ_T DROP CONSTRAINT DFA_REQ_T_PK';
END IF;
END;
/
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_indexes where INDEX_NAME = 'DFA_REQ_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'DROP INDEX DFA_REQ_T_PK';
END IF;
END;
/

ALTER TABLE DFA_REQ_T RENAME TO OLD_DFA_REQ_T
/
CREATE TABLE DFA_REQ_T AS SELECT
    CAST(FDOC_NBR AS VARCHAR2(40)) AS FDOC_NBR,
    CAST(PROC_SYS_ID AS VARCHAR2(40)) AS PROC_SYS_ID,
    NET_ID,
    CORNELL_ID,
    NAME,
    INSTRUCTIONS,
    OBJ_ID,
    VER_NBR,
    PROC_DOC_DONE,
    ORG_CODE,
    ACCT_DEPT,
    HR_DEPT,
    NDA_DOC_DONE,
    ACTION_TAKEN,
    CREATED_AT,
    CAST(ADW_ID AS VARCHAR2(40)) AS ADW_ID,
    ADW_DOC_DONE
        FROM OLD_DFA_REQ_T
/
ALTER TABLE DFA_REQ_T ADD CONSTRAINT DFA_REQ_TP1 PRIMARY KEY (FDOC_NBR)
/
ALTER TABLE DFA_REQ_T MODIFY (
    OBJ_ID DEFAULT SYS_GUID(),
    VER_NBR DEFAULT 1,
    PROC_DOC_DONE DEFAULT 'N',
    NDA_DOC_DONE DEFAULT 'Y',
    ADW_DOC_DONE DEFAULT 'N'
)
/



-- Upgrade DFA_PROCUREMENT_SYSTEM_T
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_constraints where CONSTRAINT_NAME = 'DFA_PROC_SYS_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE DFA_PROCUREMENT_SYSTEM_T DROP CONSTRAINT DFA_PROC_SYS_T_PK';
END IF;
END;
/
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_indexes where INDEX_NAME = 'DFA_PROC_SYS_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'DROP INDEX DFA_PROC_SYS_T_PK';
END IF;
END;
/

ALTER TABLE DFA_PROCUREMENT_SYSTEM_T RENAME TO OLD_DFA_PROC_SYS_T
/
CREATE TABLE DFA_PROCUREMENT_SYSTEM_T AS SELECT
    CAST(FDOC_NBR AS VARCHAR2(40)) AS FDOC_NBR,
    INFORMATION,
    CML_ID,
    BSC,
    BANKACCESS,
    ORDERING_DEPT,
    OBJ_ID,
    CAST(MASTER_DOCID AS VARCHAR2(40)) AS MASTER_DOCID,
    VER_NBR,
    APPROVER_ROLE
        FROM OLD_DFA_PROC_SYS_T
/
ALTER TABLE DFA_PROCUREMENT_SYSTEM_T ADD CONSTRAINT DFA_PROCUREMENT_SYSTEM_TP1 PRIMARY KEY (FDOC_NBR)
/
ALTER TABLE DFA_PROCUREMENT_SYSTEM_T MODIFY (
    OBJ_ID DEFAULT SYS_GUID(),
    VER_NBR DEFAULT 1
)
/



-- Upgrade DFA_PROC_SYS_PERM_T
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_constraints where CONSTRAINT_NAME = 'DFA_PROC_SYS_PERM_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE DFA_PROC_SYS_PERM_T DROP CONSTRAINT DFA_PROC_SYS_PERM_T_PK';
END IF;
END;
/
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_indexes where INDEX_NAME = 'DFA_PROC_SYS_PERM_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'DROP INDEX DFA_PROC_SYS_PERM_T_PK';
END IF;
END;
/

ALTER TABLE DFA_PROC_SYS_PERM_T RENAME TO OLD_DFA_PROC_SYS_PERM_T
/
CREATE TABLE DFA_PROC_SYS_PERM_T AS SELECT
    ID,
    PERM_ID,
    CAST(PROC_SYS_ID AS VARCHAR2(40)) AS PROC_SYS_ID,
    DEP_ID,
    APPS_INQUIRY,
    APPS_PREPARER,
    APPS_EDITOR,
    APPS_COORDINATOR,
    APPS_RECEIVER,
    APPS_CAP,
    PCARD_PROCESSOR,
    PCARD_VIEW_ONLY,
    AUTHORIZED,
    OBJ_ID,
    VER_NBR,
    SUBLEDGER_ID,
    STATUS
        FROM OLD_DFA_PROC_SYS_PERM_T
/
ALTER TABLE DFA_PROC_SYS_PERM_T ADD CONSTRAINT DFA_PROC_SYS_PERM_TP1 PRIMARY KEY (ID)
/
ALTER TABLE DFA_PROC_SYS_PERM_T MODIFY (
    OBJ_ID DEFAULT SYS_GUID(),
    VER_NBR DEFAULT 1
)
/



-- Upgrade DFA_PROC_SYS_SOURCE_PERM_T
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_constraints where CONSTRAINT_NAME = 'DFA_PROC_SYS_PERM_S_T_UNIQUE_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE DFA_PROC_SYS_SOURCE_PERM_T DROP CONSTRAINT DFA_PROC_SYS_PERM_S_T_UNIQUE_PK';
END IF;
END;
/
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_indexes where INDEX_NAME = 'DFA_PROC_SYS_PERM_S_T_UNIQUE_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'DROP INDEX DFA_PROC_SYS_PERM_S_T_UNIQUE_PK';
END IF;
END;
/

ALTER TABLE DFA_PROC_SYS_SOURCE_PERM_T RENAME TO OLD_DFA_PROC_SYS_SRC_PERM_T
/
CREATE TABLE DFA_PROC_SYS_SOURCE_PERM_T AS SELECT
    ID,
    NET_ID,
    DEP_ID,
    SUBLEDGER_ID,
    APPS_INQUIRY,
    APPS_PREPARER,
    APPS_EDITOR,
    APPS_COORDINATOR,
    APPS_RECEIVER,
    APPS_CAP,
    PCARD_PROCESSOR,
    PCARD_VIEW_ONLY,
    OBJ_ID,
    VER_NBR,
    CAST(PROC_SYS_ID AS VARCHAR2(40)) AS PROC_SYS_ID,
    VM_ID,
    APPS_APPROVER,
    BANK_ACCESS
        FROM OLD_DFA_PROC_SYS_SRC_PERM_T
/
ALTER TABLE DFA_PROC_SYS_SOURCE_PERM_T ADD CONSTRAINT DFA_PROC_SYS_SOURCE_PERM_TP1 PRIMARY KEY (ID)
/
ALTER TABLE DFA_PROC_SYS_SOURCE_PERM_T MODIFY (
    OBJ_ID DEFAULT SYS_GUID(),
    VER_NBR DEFAULT 1
)
/



-- Upgrade DFA_ADW_DOC_T
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_constraints where CONSTRAINT_NAME = 'DFA_ADW_DOC_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE DFA_ADW_DOC_T DROP CONSTRAINT DFA_ADW_DOC_T_PK';
END IF;
END;
/
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_indexes where INDEX_NAME = 'DFA_ADW_DOC_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'DROP INDEX DFA_ADW_DOC_T_PK';
END IF;
END;
/

ALTER TABLE DFA_ADW_DOC_T RENAME TO OLD_DFA_ADW_DOC_T
/
CREATE TABLE DFA_ADW_DOC_T AS SELECT
    CAST(FDOC_NBR AS VARCHAR2(40)) AS FDOC_NBR,
    SEC_ACCT,
    SEC_DIST,
    SEC_OTHR,
    SEC_INV,
    SEC_CR,
    OBJ_ID,
    ACCESS_RANGE,
    CAST(MASTER_DOCID AS VARCHAR2(40)) AS MASTER_DOCID,
    VER_NBR
        FROM OLD_DFA_ADW_DOC_T
/
ALTER TABLE DFA_ADW_DOC_T ADD CONSTRAINT DFA_ADW_DOC_TP1 PRIMARY KEY (FDOC_NBR)
/
ALTER TABLE DFA_ADW_DOC_T MODIFY (
    OBJ_ID DEFAULT SYS_GUID(),
    VER_NBR DEFAULT 1
)
/



-- Upgrade DFA_ADW_PERM_T
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_constraints where CONSTRAINT_NAME = 'DFA_ADW_PERM_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE DFA_ADW_PERM_T DROP CONSTRAINT DFA_ADW_PERM_T_PK';
END IF;
END;
/
DECLARE
c NUMBER;
BEGIN
select count(*) into c from all_indexes where INDEX_NAME = 'DFA_ADW_PERM_T_PK';
IF c>0 THEN
EXECUTE IMMEDIATE 'DROP INDEX DFA_ADW_PERM_T_PK';
END IF;
END;
/

ALTER TABLE DFA_ADW_PERM_T RENAME TO OLD_DFA_ADW_PERM_T
/
CREATE TABLE DFA_ADW_PERM_T AS SELECT
    ID,
    PERM_ID,
    CAST(DFA_SUB_DOC_ID AS VARCHAR2(40)) AS DFA_SUB_DOC_ID,
    ACCOUNT_FROM,
    ACCOUNT_TO,
    ORG_CODE,
    DEP_ID,
    AUTHORIZED,
    OBJ_ID,
    VER_NBR,
    STATUS
        FROM OLD_DFA_ADW_PERM_T
/
ALTER TABLE DFA_ADW_PERM_T ADD CONSTRAINT DFA_ADW_PERM_TP1 PRIMARY KEY (ID)
/
ALTER TABLE DFA_ADW_PERM_T MODIFY (
    OBJ_ID DEFAULT SYS_GUID(),
    VER_NBR DEFAULT 1
)
/



-- Add foreign keys back in.
ALTER TABLE  DFA_REQ_T ADD (
    CONSTRAINT DFA_PROC_SYS_T_FK 
    FOREIGN KEY (PROC_SYS_ID) 
    REFERENCES  DFA_PROCUREMENT_SYSTEM_T (FDOC_NBR))
/

-- Drop temporary tables.
DECLARE temp NUMBER;
BEGIN
    SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'OLD_DFA_REQ_T';
    IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE OLD_DFA_REQ_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/
DECLARE temp NUMBER;
BEGIN
    SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'OLD_DFA_PROC_SYS_T';
    IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE OLD_DFA_PROC_SYS_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/
DECLARE temp NUMBER;
BEGIN
    SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'OLD_DFA_PROC_SYS_PERM_T';
    IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE OLD_DFA_PROC_SYS_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/
DECLARE temp NUMBER;
BEGIN
    SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'OLD_DFA_PROC_SYS_SRC_PERM_T';
    IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE OLD_DFA_PROC_SYS_SRC_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/
DECLARE temp NUMBER;
BEGIN
    SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'OLD_DFA_ADW_DOC_T';
    IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE OLD_DFA_ADW_DOC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/
DECLARE temp NUMBER;
BEGIN
    SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'OLD_DFA_ADW_PERM_T';
    IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE OLD_DFA_ADW_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/
            ]]>
        </sql>
    </changeSet>
</databaseChangeLog>
